/*
*	Copyright (C) 2011 Life Technologies Inc.
*
*   This program is free software: you can redistribute it and/or modify
*   it under the terms of the GNU General Public License as published by
*   the Free Software Foundation, either version 2 of the License, or
*   (at your option) any later version.
*
*   This program is distributed in the hope that it will be useful,
*   but WITHOUT ANY WARRANTY; without even the implied warranty of
*   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
*   GNU General Public License for more details.
*
*   You should have received a copy of the GNU General Public License
*   along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/
/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.iontorrent.main.options;

import com.iontorrent.main.startup.TorrentScoutStartupTopComponent;
import java.util.prefs.BackingStoreException;
import java.util.prefs.Preferences;
import org.openide.util.Exceptions;

final class LookAndFeelPanel extends javax.swing.JPanel {

    private final LookAndFeelOptionsPanelController controller;

    LookAndFeelPanel(LookAndFeelOptionsPanelController controller) {
        this.controller = controller;
        initComponents();
        // TODO listen to changes in form fields and call controller.changed()
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        groupSkin = new javax.swing.ButtonGroup();
        radioAlu = new javax.swing.JRadioButton();
        radioMcwin = new javax.swing.JRadioButton();
        radioAcryl = new javax.swing.JRadioButton();
        radioNoire = new javax.swing.JRadioButton();
        radioHiFi = new javax.swing.JRadioButton();
        radioNimbus = new javax.swing.JRadioButton();
        radioBern = new javax.swing.JRadioButton();
        radioAero = new javax.swing.JRadioButton();
        jLabel2 = new javax.swing.JLabel();
        radioJava = new javax.swing.JRadioButton();
        jLabel3 = new javax.swing.JLabel();

        setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(LookAndFeelPanel.class, "LookAndFeelPanel.border.title"))); // NOI18N
        setOpaque(false);

        groupSkin.add(radioAlu);
        radioAlu.setSelected(true);
        org.openide.awt.Mnemonics.setLocalizedText(radioAlu, org.openide.util.NbBundle.getMessage(LookAndFeelPanel.class, "LookAndFeelPanel.aluminium.text")); // NOI18N
        radioAlu.setName("aluminium"); // NOI18N
        radioAlu.setOpaque(false);
        radioAlu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioAluActionPerformed(evt);
            }
        });

        groupSkin.add(radioMcwin);
        org.openide.awt.Mnemonics.setLocalizedText(radioMcwin, org.openide.util.NbBundle.getMessage(LookAndFeelPanel.class, "LookAndFeelPanel.mcwin.text")); // NOI18N
        radioMcwin.setName("mcwin"); // NOI18N
        radioMcwin.setOpaque(false);
        radioMcwin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioMcwinActionPerformed(evt);
            }
        });

        groupSkin.add(radioAcryl);
        org.openide.awt.Mnemonics.setLocalizedText(radioAcryl, org.openide.util.NbBundle.getMessage(LookAndFeelPanel.class, "LookAndFeelPanel.acryl.text")); // NOI18N
        radioAcryl.setName("acryl"); // NOI18N
        radioAcryl.setOpaque(false);
        radioAcryl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioAcrylActionPerformed(evt);
            }
        });

        groupSkin.add(radioNoire);
        org.openide.awt.Mnemonics.setLocalizedText(radioNoire, org.openide.util.NbBundle.getMessage(LookAndFeelPanel.class, "LookAndFeelPanel.nimbus.text")); // NOI18N
        radioNoire.setName("nimbus"); // NOI18N
        radioNoire.setOpaque(false);
        radioNoire.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioNoireActionPerformed(evt);
            }
        });

        groupSkin.add(radioHiFi);
        org.openide.awt.Mnemonics.setLocalizedText(radioHiFi, org.openide.util.NbBundle.getMessage(LookAndFeelPanel.class, "LookAndFeelPanel.radioHiFi.text")); // NOI18N
        radioHiFi.setName("nimbus"); // NOI18N
        radioHiFi.setOpaque(false);
        radioHiFi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioHiFiActionPerformed(evt);
            }
        });

        groupSkin.add(radioNimbus);
        org.openide.awt.Mnemonics.setLocalizedText(radioNimbus, org.openide.util.NbBundle.getMessage(LookAndFeelPanel.class, "LookAndFeelPanel.radioNimbus.text")); // NOI18N
        radioNimbus.setName("nimbus"); // NOI18N
        radioNimbus.setOpaque(false);
        radioNimbus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioNimbusActionPerformed(evt);
            }
        });

        groupSkin.add(radioBern);
        org.openide.awt.Mnemonics.setLocalizedText(radioBern, org.openide.util.NbBundle.getMessage(LookAndFeelPanel.class, "LookAndFeelPanel.radioBern.text")); // NOI18N
        radioBern.setName("nimbus"); // NOI18N
        radioBern.setOpaque(false);
        radioBern.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioBernActionPerformed(evt);
            }
        });

        groupSkin.add(radioAero);
        org.openide.awt.Mnemonics.setLocalizedText(radioAero, org.openide.util.NbBundle.getMessage(LookAndFeelPanel.class, "LookAndFeelPanel.radioAero.text")); // NOI18N
        radioAero.setName("nimbus"); // NOI18N
        radioAero.setOpaque(false);
        radioAero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioAeroActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(204, 0, 51));
        org.openide.awt.Mnemonics.setLocalizedText(jLabel2, org.openide.util.NbBundle.getMessage(LookAndFeelPanel.class, "LookAndFeelPanel.jLabel2.text")); // NOI18N

        groupSkin.add(radioJava);
        org.openide.awt.Mnemonics.setLocalizedText(radioJava, org.openide.util.NbBundle.getMessage(LookAndFeelPanel.class, "LookAndFeelPanel.radioJava.text")); // NOI18N
        radioJava.setName("nimbus"); // NOI18N
        radioJava.setOpaque(false);
        radioJava.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioJavaActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(jLabel3, org.openide.util.NbBundle.getMessage(LookAndFeelPanel.class, "LookAndFeelPanel.jLabel3.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(radioAlu)
                    .addComponent(radioMcwin)
                    .addComponent(radioAcryl)
                    .addComponent(radioNoire)
                    .addComponent(radioHiFi)
                    .addComponent(radioBern)
                    .addComponent(radioNimbus)
                    .addComponent(radioAero)
                    .addComponent(radioJava))
                .addContainerGap(179, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addContainerGap(148, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(radioAlu)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(radioMcwin)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(radioAcryl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(radioNoire)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(radioHiFi)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(radioAero)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(radioBern)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(radioNimbus)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(radioJava)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addGap(14, 14, 14))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void radioAluActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioAluActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radioAluActionPerformed

    private void radioMcwinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioMcwinActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radioMcwinActionPerformed

    private void radioAcrylActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioAcrylActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radioAcrylActionPerformed

    private void radioNoireActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioNoireActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radioNoireActionPerformed

    private void radioHiFiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioHiFiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radioHiFiActionPerformed

    private void radioNimbusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioNimbusActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radioNimbusActionPerformed

    private void radioBernActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioBernActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radioBernActionPerformed

    private void radioAeroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioAeroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radioAeroActionPerformed

    private void radioJavaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioJavaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radioJavaActionPerformed

    void load() {
        // TODO read settings and initialize GUI
        // Example:        
        // someCheckBox.setSelected(Preferences.userNodeForPackage(LookAndFeelPanel.class).getBoolean("someFlag", false));
        // or for org.openide.util with API spec. version >= 7.4:
        // someCheckBox.setSelected(NbPreferences.forModule(LookAndFeelPanel.class).getBoolean("someFlag", false));
        // or:
        // someTextField.setText(SomeSystemOption.getDefault().getSomeStringProperty());
        Preferences p = Preferences.userNodeForPackage(com.iontorrent.main.options.TorrentScoutSettingsPanel.class);
        String skin = p.get("skin", "aluminium");
        if (skin == null || skin.length() < 1) {
            skin = "aluminium";
        }
        skin = skin.toLowerCase().trim();
        if (skin.startsWith("nimbus")) {
            radioNimbus.setSelected(true);
        } else if (skin.startsWith("acryl")) {
            radioAcryl.setSelected(true);
        } else if (skin.startsWith("mcwin")) {
            radioMcwin.setSelected(true);
        } else if (skin.startsWith("aero")) {
            radioAero.setSelected(true);
        } else if (skin.startsWith("hifi")) {
            radioHiFi.setSelected(true);
        } else if (skin.startsWith("bern")) {
            radioBern.setSelected(true);
        } else if (skin.startsWith("noire")) {
            radioNoire.setSelected(true);
        } else if (skin.startsWith("java")) {
            radioJava.setSelected(true);
        } else {
            radioAlu.setSelected(true);
        }
    }

    void store() {
        // TODO store modified settings
        // Example:
        // Preferences.userNodeForPackage(LookAndFeelPanel.class).putBoolean("someFlag", someCheckBox.isSelected());
        // or for org.openide.util with API spec. version >= 7.4:
        // NbPreferences.forModule(LookAndFeelPanel.class).putBoolean("someFlag", someCheckBox.isSelected());
        // or:
        // SomeSystemOption.getDefault().setSomeStringProperty(someTextField.getText());
        String skin = "aluminium";
        if (radioAcryl.isSelected()) {
            skin = "acryl";
        } else if (radioNimbus.isSelected()) {
            skin = "nimbus";
        } else if (radioMcwin.isSelected()) {
            skin = "mcwin";
        } else if (radioAero.isSelected()) {
            skin = "aero";
        } else if (radioHiFi.isSelected()) {
            skin = "hifi";
        } else if (radioNoire.isSelected()) {
            skin = "noire";
        } else if (radioBern.isSelected()) {
            skin = "bern";
        } else if (radioJava.isSelected()) {
            skin = "java";
        } else {
            skin = "aluminium";
        }
        Preferences p = Preferences.userNodeForPackage(com.iontorrent.main.options.TorrentScoutSettingsPanel.class);
        p.put("skin", skin);
       
        TorrentScoutStartupTopComponent.setLAF(skin);

    }

    boolean valid() {
        // TODO check whether form is consistent and complete
        return true;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup groupSkin;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JRadioButton radioAcryl;
    private javax.swing.JRadioButton radioAero;
    private javax.swing.JRadioButton radioAlu;
    private javax.swing.JRadioButton radioBern;
    private javax.swing.JRadioButton radioHiFi;
    private javax.swing.JRadioButton radioJava;
    private javax.swing.JRadioButton radioMcwin;
    private javax.swing.JRadioButton radioNimbus;
    private javax.swing.JRadioButton radioNoire;
    // End of variables declaration//GEN-END:variables
}
