/*
*	Copyright (C) 2011 Life Technologies Inc.
*
*   This program is free software: you can redistribute it and/or modify
*   it under the terms of the GNU General Public License as published by
*   the Free Software Foundation, either version 2 of the License, or
*   (at your option) any later version.
*
*   This program is distributed in the hope that it will be useful,
*   but WITHOUT ANY WARRANTY; without even the implied warranty of
*   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
*   GNU General Public License for more details.
*
*   You should have received a copy of the GNU General Public License
*   along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/
/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * SiteList.java
 *
 * Created on 13.04.2011, 10:10:09
 */
package com.iontorrent.main.options;

import com.iontorrent.expmodel.FolderConfig;
import com.iontorrent.expmodel.FolderManager;
import java.util.ArrayList;
import javax.swing.event.ListSelectionListener;

/**
 *
 * @author Chantal Roth
 */
public class SiteList extends javax.swing.JPanel {

    FolderManager manager = FolderManager.getManager();
    boolean DOACTIONS;

    /** Creates new form SiteList */
    public SiteList() {
        initComponents();
        DOACTIONS = false;

        jList1.setModel(new javax.swing.AbstractListModel() {

            ArrayList<String> keys = manager.getKeys();

            @Override
            public int getSize() {
                return keys.size();
            }

            @Override
            public Object getElementAt(int i) {
                return manager.getConfig(keys.get(i));
            }
        });
        DOACTIONS = true;
    }

    
    public FolderConfig getSelectedValue() {
       return (FolderConfig) jList1.getSelectedValue();
       
    }
    public void setSelectedValue(String key) {
        jList1.setSelectedValue(manager.getConfig(key), true);
    }
    public FolderConfig getSelectedConfig() {
        
        FolderConfig conf = getSelectedValue();
        return conf;

    }
    public void add(FolderConfig conf) {
      //  jList1.getModel().
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();

        setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(SiteList.class, "SiteList.border.title"))); // NOI18N

        jList1.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(jList1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 149, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 166, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList jList1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    void addListSelectionListener(ListSelectionListener listSelectionListener) {
        this.jList1.addListSelectionListener(listSelectionListener);
    }
}
