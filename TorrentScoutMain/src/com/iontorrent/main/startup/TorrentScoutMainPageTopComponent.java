/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.iontorrent.main.startup;

import com.iontorrent.expmodel.FolderManager;
import com.iontorrent.guiutils.netbeans.OpenWindowAction;
import com.iontorrent.main.options.TorrentScoutSettingsOptionsPanelController;
import com.iontorrent.main.options.TorrentScoutSettingsPanel;
import java.awt.Graphics;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.prefs.Preferences;
import javax.swing.Action;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import org.netbeans.api.options.OptionsDisplayer;
import org.openide.util.NbBundle;
import org.openide.windows.TopComponent;
import org.openide.windows.WindowManager;
import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(dtd = "-//com.iontorrent.main.startup//TorrentScoutMainPage//EN",
autostore = false)
@TopComponent.Description(preferredID = "TorrentScoutMainPageTopComponent",
iconBase = "com/iontorrent/main/startup/chip_16.png",
persistenceType = TopComponent.PERSISTENCE_ALWAYS)
@TopComponent.Registration(mode = "output", openAtStartup = true)
@ActionID(category = "Window", id = "com.iontorrent.main.startup.TorrentScoutMainPageTopComponent")
@ActionReference(path = "Menu/Window" /*, position = 333 */)
@TopComponent.OpenActionRegistration(displayName = "#CTL_TorrentScoutMainPageAction",
preferredID = "TorrentScoutMainPageTopComponent")
public final class TorrentScoutMainPageTopComponent extends TopComponent {

    ImageIcon icon = new ImageIcon(getClass().getResource("startup.png"));

    public TorrentScoutMainPageTopComponent() {
        initComponents();
        setName(NbBundle.getMessage(TorrentScoutMainPageTopComponent.class, "CTL_TorrentScoutMainPageTopComponent"));
        setToolTipText(NbBundle.getMessage(TorrentScoutMainPageTopComponent.class, "HINT_TorrentScoutMainPageTopComponent"));

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel =  new javax.swing.JPanel() {
            protected void paintComponent(Graphics g) 
            { 
                g.drawImage(icon.getImage(), 15, 5, null); 
                super.paintComponent(g); 
            } 
        };
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setBackground(java.awt.Color.black);
        setForeground(java.awt.Color.white);
        setOpaque(true);

        mainPanel.setBackground(new java.awt.Color(0, 0, 0));
        mainPanel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/iontorrent/main/startup/startup.png"))); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(TorrentScoutMainPageTopComponent.class, "TorrentScoutMainPageTopComponent.jLabel1.text")); // NOI18N

        jButton1.setBackground(new java.awt.Color(255, 204, 0));
        jButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(jButton1, org.openide.util.NbBundle.getMessage(TorrentScoutMainPageTopComponent.class, "TorrentScoutMainPageTopComponent.jButton1.text")); // NOI18N
        jButton1.setToolTipText(org.openide.util.NbBundle.getMessage(TorrentScoutMainPageTopComponent.class, "TorrentScoutMainPageTopComponent.jButton1.toolTipText")); // NOI18N
        jButton1.setOpaque(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addContainerGap(60, Short.MAX_VALUE))
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jLabel1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    @Override
    public Action[] getActions() {
        return OpenWindowAction.getActions(this);
    }

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Preferences p = Preferences.userNodeForPackage(com.iontorrent.main.options.TorrentScoutSettingsPanel.class);       
        boolean firstTime = p.getBoolean("first_time_start", true);

        FolderManager manager = FolderManager.getManager();
        String default_rule = manager.setDefaultRule();

        p("firstTime="+firstTime);
        if (firstTime || default_rule == null) {    
            TorrentScoutSettingsPanel pan = new TorrentScoutSettingsPanel(new TorrentScoutSettingsOptionsPanelController());
            int ok = JOptionPane.showConfirmDialog(this, pan, "Please configure Torrent Scout", JOptionPane.OK_CANCEL_OPTION);
            if (ok == JOptionPane.OK_OPTION) {
                pan.store();                
            }
            default_rule = manager.setDefaultRule();
            //OptionsDisplayer.getDefault().open("TorrentScoutOptions/TorrentScoutSettings");
       }
     //   p.put("first_time_start", "false");

        TopComponent tc = WindowManager.getDefault().findTopComponent("ExperimentViewerTopComponent");
             
        if (tc == null || default_rule == null || default_rule.length() < 1 || default_rule.startsWith("offline")) {
            //JOptionPane.showMessageDialog(this, "Could not find the db explorer");
            tc = WindowManager.getDefault().findTopComponent("OfflineTopComponent");
        }

        if (tc != null) {
            tc.open();
            tc.requestAttention(true);
            tc.requestActive();
            tc.requestVisible();
            tc.toFront();
            close();
        }

    }//GEN-LAST:event_jButton1ActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel mainPanel;
    // End of variables declaration//GEN-END:variables

    @Override
    public void componentOpened() {
        // TODO add custom code on component opening
        toFront();
    }

    @Override
    public void componentClosed() {
        // TODO add custom code on component closing
    }

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }
      private static void p(String msg) {
        Logger.getLogger(TorrentScoutMainPageTopComponent.class.getName()).log(Level.INFO, msg);
    }
}
