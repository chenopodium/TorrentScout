/*
*	Copyright (C) 2011 Life Technologies Inc.
*
*   This program is free software: you can redistribute it and/or modify
*   it under the terms of the GNU General Public License as published by
*   the Free Software Foundation, either version 2 of the License, or
*   (at your option) any later version.
*
*   This program is distributed in the hope that it will be useful,
*   but WITHOUT ANY WARRANTY; without even the implied warranty of
*   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
*   GNU General Public License for more details.
*
*   You should have received a copy of the GNU General Public License
*   along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/
/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ConversionPanel.java
 *
 * Created on 31.03.2011, 09:18:03
 */
package com.iontorrent.main.data;

import com.iontorrent.main.data.RawFileConverter.Conversion;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Chantal Roth
 */
public class ConversionPanel extends javax.swing.JPanel {

    Conversion[] conv;

    /** Creates new form ConversionPanel */
    public ConversionPanel(Conversion[] conv, String raw, String cache) {
        initComponents();
        this.conv = conv;
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        jTable1.setDefaultRenderer(Integer.class, new ConvRenderer());
        
        for (int i = 0; i < conv.length; i++) {
            Conversion c = conv[i];
            model.setValueAt(c.getType().getDescription(), i, 0);
            model.setValueAt(c.getMax(), i, 1);
            int s = c.getStart();
            model.setValueAt(s, i, 2);            
            if (i == 0) model.setValueAt(Math.max(1, s), i, 3);
            else model.setValueAt(Math.max(0, s), i, 3);
        }
        lblRaw.setText("Raw directory: " + raw );
        lblCache.setText("Cache directory: " + cache);
    }

    public String getResult() {
        String msg = "";
        for (int i = 0; i < conv.length; i++) {
            Conversion con = conv[i];
            con.setEnd((Integer) jTable1.getModel().getValueAt(i, 3));
            int start = con.getStart();
            int end = con.getEnd();
            if (start < 0) {
                //msg += con.getType()+": Start (" + start + ") for " + con.getType() + " must be >= 0<br>";
            } else if (end < start || end < 0) {
                msg += con.getType()+": Start (" + start + ") for " + con.getType() + " must be > end (" + end + ")<br>";
            } else if (end > con.getMax()) {
                msg += con.getType()+": There are only " + con.getMax() + " files of type " + con.getType() + "*.dat, but startflow=" + start + " and end=" + end + "<br>";
            }
        }
        return msg;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        lblRaw = new javax.swing.JLabel();
        lblCache = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Raw type", "# .dat files", "# already cached", "# flows to cache"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable1.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTable1);
        jTable1.getColumnModel().getColumn(0).setHeaderValue(org.openide.util.NbBundle.getMessage(ConversionPanel.class, "ConversionPanel.jTable1.columnModel.title0")); // NOI18N
        jTable1.getColumnModel().getColumn(1).setHeaderValue(org.openide.util.NbBundle.getMessage(ConversionPanel.class, "ConversionPanel.jTable1.columnModel.title1")); // NOI18N
        jTable1.getColumnModel().getColumn(2).setHeaderValue(org.openide.util.NbBundle.getMessage(ConversionPanel.class, "ConversionPanel.jTable1.columnModel.title2")); // NOI18N
        jTable1.getColumnModel().getColumn(3).setHeaderValue(org.openide.util.NbBundle.getMessage(ConversionPanel.class, "ConversionPanel.jTable1.columnModel.title3")); // NOI18N

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 153, 0));
        jLabel1.setText(org.openide.util.NbBundle.getMessage(ConversionPanel.class, "ConversionPanel.jLabel1.text")); // NOI18N

        lblRaw.setText(org.openide.util.NbBundle.getMessage(ConversionPanel.class, "ConversionPanel.lblRaw.text")); // NOI18N

        lblCache.setText(org.openide.util.NbBundle.getMessage(ConversionPanel.class, "ConversionPanel.lblCache.text")); // NOI18N

        jLabel3.setText(org.openide.util.NbBundle.getMessage(ConversionPanel.class, "ConversionPanel.jLabel3.text")); // NOI18N

        jLabel4.setText(org.openide.util.NbBundle.getMessage(ConversionPanel.class, "ConversionPanel.jLabel4.text")); // NOI18N

        jLabel5.setForeground(new java.awt.Color(153, 0, 0));
        jLabel5.setText(org.openide.util.NbBundle.getMessage(ConversionPanel.class, "ConversionPanel.jLabel5.text")); // NOI18N

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(153, 0, 0));
        jLabel6.setText(org.openide.util.NbBundle.getMessage(ConversionPanel.class, "ConversionPanel.jLabel6.text")); // NOI18N

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText(org.openide.util.NbBundle.getMessage(ConversionPanel.class, "ConversionPanel.jLabel2.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel1)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 564, Short.MAX_VALUE)
                    .addComponent(lblCache, javax.swing.GroupLayout.DEFAULT_SIZE, 564, Short.MAX_VALUE)
                    .addComponent(lblRaw, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 564, Short.MAX_VALUE)
                    .addComponent(jLabel2))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addGap(9, 9, 9)
                .addComponent(lblRaw)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblCache)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblCache;
    private javax.swing.JLabel lblRaw;
    // End of variables declaration//GEN-END:variables
}
