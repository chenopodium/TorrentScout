/*
 *	Copyright (C) 2011 Life Technologies Inc.
 *
 *   This program is free software: you can redistribute it and/or modify
 *   it under the terms of the GNU General Public License as published by
 *   the Free Software Foundation, either version 2 of the License, or
 *   (at your option) any later version.
 *
 *   This program is distributed in the hope that it will be useful,
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *   GNU General Public License for more details.
 *
 *   You should have received a copy of the GNU General Public License
 *   along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * FlowNrPanel.java
 *
 * Created on 11.05.2011, 10:48:41
 */
package com.iontorrent.guiutils.flow;

import com.iontorrent.expmodel.FlowListener;
import com.iontorrent.utils.StringTools;
import java.util.ArrayList;
import javax.swing.JPanel;

/**
 *
 * @author Chantal Roth
 */
public class FlowNrPanel extends JPanel {

    private FlowListener list;

    public FlowNrPanel(){
        
    }
     public void setToolTipText(String text) {
         super.setToolTipText(text);
         this.txtFlow.setToolTipText(text);
         this.jLabel1.setToolTipText(text);
     }
    /** Creates new form FlowNrPanel */
    public FlowNrPanel(FlowListener list) {
        initComponents();
        this.list = list;
    }

    public int getFlow() {
        ArrayList<Integer> flows = getFlows();
        if (flows != null && flows.size() > 0) {
            return flows.get(0);
        } else {
            return 0;
        }
    }

    public void setText(String s) {
        txtFlow.setText(s);
    }
    public void setFlow(int f) {
        txtFlow.setText("" + f);
    }

    public ArrayList<Integer> getFlows() {
        // check for -
        ArrayList<String> items = StringTools.parseList(txtFlow.getText(), ",");
        ArrayList<Integer> flows = new ArrayList<Integer>();
        for (String it : items) {
            if (it.indexOf("-") > 0) {
                ArrayList<Integer> nrs = StringTools.parseListtoInt(it, "-");
                if (nrs != null && nrs.size() == 2) {
                    int a = nrs.get(0);
                    int b = nrs.get(1);
                    for (int f = a; f <= b; f++) {
                        flows.add(f);
                    }
                }
            } else {
                try {
                    int f = Integer.parseInt(it);
                    flows.add(f);
                } catch (Exception e) {
                }
            }
        }
        return flows;
    }

    public void setFlows(ArrayList<Integer> f) {
        if (f == null) {
            txtFlow.setText("0");
        } else {
            String s = f.toString();
            s = s.substring(1, s.length() - 1);
            txtFlow.setText(s);
        } 
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtFlow = new javax.swing.JTextField();

        setOpaque(false);

        jLabel1.setText(org.openide.util.NbBundle.getMessage(FlowNrPanel.class, "FlowNrPanel.jLabel1.text")); // NOI18N

        txtFlow.setColumns(8);
        txtFlow.setText(org.openide.util.NbBundle.getMessage(FlowNrPanel.class, "FlowNrPanel.txtFlow.text")); // NOI18N
        txtFlow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFlowActionPerformed(evt);
            }
        });
        txtFlow.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtFlowFocusLost(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtFlow, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel1)
                .addComponent(txtFlow, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtFlowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFlowActionPerformed
        if (getList() != null) {
            getList().flowChanged(getFlows());
        }
    }//GEN-LAST:event_txtFlowActionPerformed

    private void txtFlowFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFlowFocusLost
        if (getList() != null) {
            getList().flowChanged(getFlows());
        }
    }//GEN-LAST:event_txtFlowFocusLost
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField txtFlow;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the list
     */
    public FlowListener getList() {
        return list;
    }

    /**
     * @param list the list to set
     */
    public void setList(FlowListener list) {
        this.list = list;
    }
}
