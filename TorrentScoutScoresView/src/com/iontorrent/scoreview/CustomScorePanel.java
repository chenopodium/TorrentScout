/*
 *	Copyright (C) 2011 Life Technologies Inc.
 *
 *   This program is free software: you can redistribute it and/or modify
 *   it under the terms of the GNU General Public License as published by
 *   the Free Software Foundation, either version 2 of the License, or
 *   (at your option) any later version.
 *
 *   This program is distributed in the hope that it will be useful,
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *   GNU General Public License for more details.
 *
 *   You should have received a copy of the GNU General Public License
 *   along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * CustomScorePanel.java
 *
 * Created on 13.06.2011, 09:33:33
 */
package com.iontorrent.scoreview;

import com.iontorrent.heatmaps.Parameter;
import com.iontorrent.heatmaps.SMCalculatorFactory;
import com.iontorrent.heatmaps.ScoreMaskCalculatorIF;
import com.iontorrent.rawdataaccess.wells.ScoreMaskFlag;
import java.util.ArrayList;
import javax.swing.JLabel;
import javax.swing.JTextField;

/**
 *
 * @author Chantal Roth
 */
public class CustomScorePanel extends javax.swing.JPanel {

    /** Creates new form CustomScorePanel */
    public CustomScorePanel() {
        initComponents();

        ScoreMaskFlag flags[] = ScoreMaskFlag.CUSTOM_FLAGS;

        comboScoreFlag.setModel(new javax.swing.DefaultComboBoxModel(flags));
        comboScoreFlag.setSelectedItem(0);

        ArrayList<ScoreMaskCalculatorIF> types = SMCalculatorFactory.getCalculators();

        ScoreMaskCalculatorIF[] calcs = new ScoreMaskCalculatorIF[types.size()];
        for (int i = 0; i < types.size(); i++) {
            calcs[i] = types.get(i);
        }
        comboType.setModel(new javax.swing.DefaultComboBoxModel(calcs));
        comboType.setSelectedIndex(0);
    }

    public void update(ScoreMaskCalculatorIF calc) {
        this.lblheatmap.setText(calc.getDesc());
        
        Parameter par[] = calc.getParams();
        this.txtParam1.setText("");
        this.txtParam2.setText("");
        this.txtParam3.setText("");
        this.txtParam4.setText("");
        if (par == null) {
            return;
        }
        update(lbldesc1, txtParam1, par, 0);
        update(lbldesc2, txtParam2, par, 1);
        update(lbldesc3, txtParam3, par, 2);        
        update(lbldesc4, txtParam4, par, 3);
     
     
        
    }
    private void update(JLabel lbl, JTextField txt, Parameter[] pars, int which) {        
        boolean en = pars.length>which;        
        lbl.setEnabled(en);
        txt.setEnabled(en);
        lbl.setVisible(en);
        txt.setVisible(en);
        if (en) {
            Parameter par = pars[which];
            if (par.getValue()!= null) txt.setText(par.getValue());
            lbl.setText(par.getName());
            txt.setToolTipText(par.getDesc());
        }
    }
    public ScoreMaskCalculatorIF getCalculator() {
        ScoreMaskCalculatorIF calc = (ScoreMaskCalculatorIF) comboType.getSelectedItem();
        ScoreMaskFlag flag = (ScoreMaskFlag) comboScoreFlag.getSelectedItem();
        calc.setFlag(flag);
        Parameter par[] = calc.getParams();
        if (par != null) {
            if (par.length > 0) {
                par[0].setValue(this.txtParam1.getText());
            }
            if (par.length > 1) {
                par[1].setValue(this.txtParam2.getText());
            }
            if (par.length > 2) {
                par[2].setValue(this.txtParam3.getText());
            }
            if (par.length > 3) {
                par[3].setValue(this.txtParam4.getText());
            }
            calc.setParams(par);
        }

        return calc;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        comboScoreFlag = new javax.swing.JComboBox();
        comboType = new javax.swing.JComboBox();
        txtParam1 = new javax.swing.JTextField();
        txtParam2 = new javax.swing.JTextField();
        lblflag = new javax.swing.JLabel();
        lblheatmap = new javax.swing.JLabel();
        lbldesc1 = new javax.swing.JLabel();
        lbldesc2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        lbldesc4 = new javax.swing.JLabel();
        txtParam3 = new javax.swing.JTextField();
        txtParam4 = new javax.swing.JTextField();
        lbldesc3 = new javax.swing.JLabel();

        setLayout(new java.awt.GridBagLayout());

        comboScoreFlag.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboScoreFlag.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboScoreFlagActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        add(comboScoreFlag, gridBagConstraints);

        comboType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboTypeActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        add(comboType, gridBagConstraints);

        txtParam1.setColumns(20);
        txtParam1.setText(org.openide.util.NbBundle.getMessage(CustomScorePanel.class, "CustomScorePanel.txtParam1.text")); // NOI18N
        txtParam1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtParam1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        add(txtParam1, gridBagConstraints);

        txtParam2.setColumns(20);
        txtParam2.setText(org.openide.util.NbBundle.getMessage(CustomScorePanel.class, "CustomScorePanel.txtParam2.text")); // NOI18N
        txtParam2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtParam2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        add(txtParam2, gridBagConstraints);

        lblflag.setText(org.openide.util.NbBundle.getMessage(CustomScorePanel.class, "CustomScorePanel.lblflag.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        add(lblflag, gridBagConstraints);

        lblheatmap.setText(org.openide.util.NbBundle.getMessage(CustomScorePanel.class, "CustomScorePanel.lblheatmap.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        add(lblheatmap, gridBagConstraints);

        lbldesc1.setText(org.openide.util.NbBundle.getMessage(CustomScorePanel.class, "CustomScorePanel.lbldesc1.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        add(lbldesc1, gridBagConstraints);

        lbldesc2.setText(org.openide.util.NbBundle.getMessage(CustomScorePanel.class, "CustomScorePanel.lbldesc2.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        add(lbldesc2, gridBagConstraints);

        jLabel1.setText(org.openide.util.NbBundle.getMessage(CustomScorePanel.class, "CustomScorePanel.jLabel1.text")); // NOI18N
        add(jLabel1, new java.awt.GridBagConstraints());

        lbldesc4.setText(org.openide.util.NbBundle.getMessage(CustomScorePanel.class, "CustomScorePanel.lbldesc4.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        add(lbldesc4, gridBagConstraints);

        txtParam3.setColumns(5);
        txtParam3.setText(org.openide.util.NbBundle.getMessage(CustomScorePanel.class, "CustomScorePanel.txtParam3.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        add(txtParam3, gridBagConstraints);

        txtParam4.setColumns(5);
        txtParam4.setText(org.openide.util.NbBundle.getMessage(CustomScorePanel.class, "CustomScorePanel.txtParam4.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        add(txtParam4, gridBagConstraints);

        lbldesc3.setText(org.openide.util.NbBundle.getMessage(CustomScorePanel.class, "CustomScorePanel.lbldesc3.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        add(lbldesc3, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void comboScoreFlagActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboScoreFlagActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboScoreFlagActionPerformed

    private void txtParam1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtParam1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtParam1ActionPerformed

    private void txtParam2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtParam2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtParam2ActionPerformed

    private void comboTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboTypeActionPerformed
        ScoreMaskCalculatorIF calc = (ScoreMaskCalculatorIF) comboType.getSelectedItem();
        update(calc);
    }//GEN-LAST:event_comboTypeActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox comboScoreFlag;
    private javax.swing.JComboBox comboType;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lbldesc1;
    private javax.swing.JLabel lbldesc2;
    private javax.swing.JLabel lbldesc3;
    private javax.swing.JLabel lbldesc4;
    private javax.swing.JLabel lblflag;
    private javax.swing.JLabel lblheatmap;
    private javax.swing.JTextField txtParam1;
    private javax.swing.JTextField txtParam2;
    private javax.swing.JTextField txtParam3;
    private javax.swing.JTextField txtParam4;
    // End of variables declaration//GEN-END:variables
}
