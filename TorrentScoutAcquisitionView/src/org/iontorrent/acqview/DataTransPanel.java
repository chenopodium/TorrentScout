/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * DataTransPanel.java
 *
 * Created on 13.09.2011, 10:57:35
 */
package org.iontorrent.acqview;

import com.iontorrent.rawdataaccess.transformation.DataTransformation;
import com.iontorrent.rawdataaccess.transformation.TransformFactory;
import com.iontorrent.utils.system.Parameter;
import java.awt.Color;
import java.awt.Insets;
import java.util.ArrayList;
import javax.swing.JLabel;
import javax.swing.JTextField;

/**
 *
 * @author Chantal Roth
 */
public class DataTransPanel extends javax.swing.JPanel {

    DataTransformation trans;
    ArrayList<DataTransformation> alltrans;
     
    /** Creates new form DataTransPanel */
    public DataTransPanel() {
        initComponents();
        alltrans= TransformFactory.getTransformations();
        DataTransformation[]  data = new DataTransformation[alltrans.size()];
        int i = 0;
        for (DataTransformation t: alltrans) {
            data[i++] = t;            
        }
        trans = data[0];
        jTextArea1.setOpaque(false);
        jTextArea1.setMargin(new Insets(5,20,5,5));
       // jScrollPane2.setMargin(new Insets(5,5,5,5));
        this.jScrollPane2.setOpaque(false);
        this.jScrollPane2.getViewport().setOpaque(false);
        jTextArea1.setAlignmentX(0.5f);
    //    jTextArea1.setBorder(null);
       // jTextArea1.set
        update(trans);
        this.listTrans.setListData(data);
        
    }

     public void update(DataTransformation trans) {
         
        String s = trans.getDescription();
        s = s.replace("\n", "<br>");
        s = s.replace(" ", "&nbsp;");
        this.lblDesc.setText("<html>"+s+"</html>");
        
        Parameter par[] = trans.getParams();
        this.txtParam1.setText("");
        this.txtParam2.setText("");
        this.txtParam3.setText("");
        this.txtParam4.setText("");
       
        this.jCheckBox1.setSelected(trans.isEnabled());
        update(lbldesc1, txtParam1, par, 0);
        update(lbldesc2, txtParam2, par, 1);
        update(lbldesc3, txtParam3, par, 2);        
        update(lbldesc4, txtParam4, par, 3);
        s = trans.toLongString();
       // s = s.replace("\n", "<br>");
      //  s = s.replace(" ", "&nbsp;");
     //   this.jTextArea1.setText("<html>"+s+"</html>");
        this.jTextArea1.setText(s);
     
        
    }
    private void update(JLabel lbl, JTextField txt, Parameter[] pars, int which) {        
        boolean en = false;
        if (pars != null) en = pars.length>which;        
        lbl.setEnabled(en);
        txt.setEnabled(en);
        lbl.setVisible(en);
        txt.setVisible(en);
        if (en) {
            Parameter par = pars[which];
            if (par != null) {
                if (par.getValue()!= null) txt.setText(par.getValue());
                lbl.setText(par.getName());
                txt.setToolTipText(par.getDescription());
            }
        }
    }
     public void getParameters() {
         if (trans == null) return;
        Parameter par[] = trans.getParams();
        if (par != null) {
            if (par.length > 0) {
                par[0].setValue(this.txtParam1.getText());
            }
            if (par.length > 1) {
                par[1].setValue(this.txtParam2.getText());
            }
            if (par.length > 2) {
                par[2].setValue(this.txtParam3.getText());
            }
            if (par.length > 3) {
                par[3].setValue(this.txtParam4.getText());
            }
            trans.setParams(par);
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jScrollPane1 = new javax.swing.JScrollPane();
        listTrans = new javax.swing.JList();
        pCenter = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jPanel1 = new javax.swing.JPanel();
        txtParam4 = new javax.swing.JTextField();
        lbldesc1 = new javax.swing.JLabel();
        txtParam3 = new javax.swing.JTextField();
        txtParam1 = new javax.swing.JTextField();
        lbldesc3 = new javax.swing.JLabel();
        lbldesc4 = new javax.swing.JLabel();
        lbldesc2 = new javax.swing.JLabel();
        txtParam2 = new javax.swing.JTextField();
        lblDesc = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();

        setOpaque(false);
        setLayout(new java.awt.BorderLayout());

        listTrans.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        listTrans.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listTransValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(listTrans);

        add(jScrollPane1, java.awt.BorderLayout.WEST);

        pCenter.setOpaque(false);
        pCenter.setLayout(new java.awt.BorderLayout());

        jScrollPane2.setBorder(null);
        jScrollPane2.setOpaque(false);

        jTextArea1.setColumns(50);
        jTextArea1.setRows(14);
        jTextArea1.setOpaque(false);
        jScrollPane2.setViewportView(jTextArea1);

        pCenter.add(jScrollPane2, java.awt.BorderLayout.SOUTH);

        jPanel1.setAlignmentX(0.0F);
        jPanel1.setOpaque(false);
        jPanel1.setLayout(new java.awt.GridBagLayout());

        txtParam4.setColumns(10);
        txtParam4.setText(org.openide.util.NbBundle.getMessage(DataTransPanel.class, "DataTransPanel.txtParam4.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 0, 0, 0);
        jPanel1.add(txtParam4, gridBagConstraints);

        lbldesc1.setText(org.openide.util.NbBundle.getMessage(DataTransPanel.class, "DataTransPanel.lbldesc1.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 0, 0, 0);
        jPanel1.add(lbldesc1, gridBagConstraints);

        txtParam3.setColumns(10);
        txtParam3.setText(org.openide.util.NbBundle.getMessage(DataTransPanel.class, "DataTransPanel.txtParam3.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 9;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 0, 0, 0);
        jPanel1.add(txtParam3, gridBagConstraints);

        txtParam1.setColumns(10);
        txtParam1.setText(org.openide.util.NbBundle.getMessage(DataTransPanel.class, "DataTransPanel.txtParam1.text")); // NOI18N
        txtParam1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtParam1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 0, 0, 0);
        jPanel1.add(txtParam1, gridBagConstraints);

        lbldesc3.setText(org.openide.util.NbBundle.getMessage(DataTransPanel.class, "DataTransPanel.lbldesc3.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 0, 0, 0);
        jPanel1.add(lbldesc3, gridBagConstraints);

        lbldesc4.setText(org.openide.util.NbBundle.getMessage(DataTransPanel.class, "DataTransPanel.lbldesc4.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 10, 0, 0);
        jPanel1.add(lbldesc4, gridBagConstraints);

        lbldesc2.setText(org.openide.util.NbBundle.getMessage(DataTransPanel.class, "DataTransPanel.lbldesc2.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 10, 0, 0);
        jPanel1.add(lbldesc2, gridBagConstraints);

        txtParam2.setColumns(10);
        txtParam2.setText(org.openide.util.NbBundle.getMessage(DataTransPanel.class, "DataTransPanel.txtParam2.text")); // NOI18N
        txtParam2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtParam2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 0, 0, 0);
        jPanel1.add(txtParam2, gridBagConstraints);

        lblDesc.setText(org.openide.util.NbBundle.getMessage(DataTransPanel.class, "DataTransPanel.lblDesc.text")); // NOI18N
        lblDesc.setMaximumSize(new java.awt.Dimension(600, 100));
        lblDesc.setMinimumSize(new java.awt.Dimension(350, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.gridwidth = 11;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 10, 0);
        jPanel1.add(lblDesc, gridBagConstraints);

        jCheckBox1.setText(org.openide.util.NbBundle.getMessage(DataTransPanel.class, "DataTransPanel.jCheckBox1.text")); // NOI18N
        jCheckBox1.setOpaque(false);
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 10;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel1.add(jCheckBox1, gridBagConstraints);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText(org.openide.util.NbBundle.getMessage(DataTransPanel.class, "DataTransPanel.jLabel1.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 10;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        jPanel1.add(jLabel1, gridBagConstraints);

        pCenter.add(jPanel1, java.awt.BorderLayout.NORTH);

        add(pCenter, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void txtParam1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtParam1ActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_txtParam1ActionPerformed

    private void txtParam2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtParam2ActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_txtParam2ActionPerformed

    private void listTransValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listTransValueChanged
        
        // get old values first
        if (trans != null) {
            this.getParameters();
        }
        trans = (DataTransformation) listTrans.getSelectedValue();
        if (trans != null) {
            this.update(trans);
        }
    }//GEN-LAST:event_listTransValueChanged

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        if (trans != null) trans.setEnabled(jCheckBox1.isSelected());
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JLabel lblDesc;
    private javax.swing.JLabel lbldesc1;
    private javax.swing.JLabel lbldesc2;
    private javax.swing.JLabel lbldesc3;
    private javax.swing.JLabel lbldesc4;
    private javax.swing.JList listTrans;
    private javax.swing.JPanel pCenter;
    private javax.swing.JTextField txtParam1;
    private javax.swing.JTextField txtParam2;
    private javax.swing.JTextField txtParam3;
    private javax.swing.JTextField txtParam4;
    // End of variables declaration//GEN-END:variables
}
